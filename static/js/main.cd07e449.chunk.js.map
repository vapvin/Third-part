{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/Globalstyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","console","log","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd07e449.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    :not(:last-child){\n        margin-bottom: 50px; \n    }\n`;\n\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({title, children}) => (\n    <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n    <Container>\n      <Text color={color}>{text}</Text>\n    </Container>\n  );\n  \n  Message.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n  };\n  \n  export default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport {Helmet} from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Nomflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"bd4c01f1fccd09c5d1d8a5188cf9576f\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;","import React from 'react';\nimport HomePresenter from './HomePresenter'\nimport {moviesApi} from 'api';\n\n\n// Class Component Version..\nexport default class extends React.Component{\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    }\n\n    async componentDidMount(){\n        try{\n            const {data: {results: nowPlaying}} = await moviesApi.nowPlaying();\n            const {data: {results: upcoming}} = await moviesApi.upcoming();\n            const {data: {results: popular}} = await moviesApi.popular();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            });\n        } catch(error) {\n            this.setState({\n                error: \"Can Not Found\"\n            })\n        } finally {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    render(){\n        const {nowPlaying, upcoming, popular, error, loading} = this.state;\n        return (\n            <HomePresenter nowPlaying={nowPlaying} upcoming={upcoming} popular={popular} error={error} loading={loading} />\n        )\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport {Helmet} from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n   padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainer from './TVContainer';\nexport default TVContainer","import React from 'react';\nimport TVPresenter from './TVPresenter';\nimport { tvApi } from 'api';\n\nexport default class extends React.Component{\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount(){\n        try {\n            const {data: {results: topRated}} = await tvApi.topRated();\n            const {data: {results: popular}} = await tvApi.popular();\n            const {data: {results: airingToday}} = await tvApi.airingToday();\n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            });\n            \n        } catch(error){\n            this.setState({\n                error: \"Can Not Found\"\n            })\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render(){\n    const {topRated, popular, airingToday,error,loading} = this.state;\n    console.log(this.state)\n        return (\n            <TVPresenter\n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                error={error}\n                loading={loading}\n            />\n        )\n    }\n}\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport {Helmet} from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from './SearchContainer';\nexport default SearchContainer;","import React from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi, tvApi } from '../../api';\n\n\nexport default class extends React.Component{\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: '',\n        error: null,\n        loading: false\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const {searchTerm} = this.state;\n        if(searchTerm !== \"\"){\n            this.searchByTerm();\n        }\n    };\n\n    updateTerm = event => {\n        const {\n          target: { value }\n        } = event;\n        this.setState({\n          searchTerm: value\n        });\n      };\n    \n\n    searchByTerm = async() => {\n        const {searchTerm} = this.state;\n        this.setState({\n            loading: true\n        });\n        try{\n            const {data: {results: movieResults}} = await moviesApi.search(searchTerm);\n            const {data: {results: tvResults}} = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults,\n            });\n        } catch(error) {\n            this.setState({\n                error: \"Can Not Found\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n    \n    render(){\n        const {movieResults, tvResults, searchTerm,error,loading} = this.state;\n\n        return (\n\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                error={error}\n                loading={loading}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        )\n    }\n}\n\n","import React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0 10px;\n  background: rgba(20, 20, 20, 0.5);\n  box-shadow: 0 1px 5px 2px rgba(0,0,0,0.8);\n  z-index: 999999;\n`;\n\nconst List = styled.ul`\n    display: flex;\n    height: 100%;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.36s ease-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n\n\nexport default withRouter(\n    ({location: {pathname}}) => (\n        <Header>\n            <List>\n                <Item current={pathname === \"/\"}><SLink to=\"/\">Movies</SLink></Item>\n                <Item current={pathname === \"/tv\"}><SLink to=\"/tv\">TV</SLink></Item>\n                <Item current={pathname === \"/search\"}><SLink to=\"/search\">Search</SLink></Item>\n            </List>\n        </Header>\n    )\n)","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport {Helmet} from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n    <Helmet>\n      <title>Loading | Nomflix</title>\n    </Helmet>\n    <Loader />\n  </>\n  ) : (\n    <Container>\n       <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;","import DetailContainer from './DetailContainer';\nexport default DetailContainer;","import React from 'react';\nimport DetailPresenter from './DetailPresenter';\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component{\n    constructor(props) {\n        super(props);\n        const {\n          location: { pathname }\n        } = props;\n        this.state = {\n          result: null,\n          error: null,\n          loading: true,\n          isMovie: pathname.includes(\"/movie/\")\n        };\n      }\n      \n    async componentDidMount() {\n        const {\n          match: {\n            params: { id }\n          },\n          history: { push }\n        } = this.props;\n        const {isMovie} = this.state;\n        const parsedId = parseInt(id);\n        if (isNaN(parsedId)) {\n          return push(\"/\");\n        }\n        let result = null;\n        try {\n          if (isMovie) {\n            ({ data: result } = await moviesApi.movieDetail(parsedId));\n          } else {\n            ({ data: result } = await tvApi.showDetail(parsedId));\n          }\n        } catch {\n          this.setState({ error: \"Can't find anything.\" });\n        } finally {\n          this.setState({ loading: false, result });\n        }\n      }\n    \n    render(){\n        const {result, loading, error} = this.state;\n        return(\n            <DetailPresenter\n                result={result}\n                loading={loading}\n                error={error}\n            />\n        )\n    }\n}\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Header from './Header';\nimport Detail from 'Routes/Detail'\n\nexport default () => (\n    <Router>\n        <>\n            <Header />\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/tv\" component={TV} />\n                <Route path=\"/search\" component={Search} />\n                <Route path=\"/movie/:id\" component={Detail} />\n                <Route path=\"/show/:id\" component={Detail} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </>\n    </Router>\n)","import { createGlobalStyle} from \"styled-components\";\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n  ${reset};\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  \n  * {\n    box-sizing: border-box;\n  }\n  \n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto;\n    font-size: 14px;\n    background: rgba(20,20,20, 1);\n    color: white;\n    padding-top:50px;\n  }\n`;\n\nexport default globalStyles;","import React from 'react';\nimport Router from './Router';\nimport GlobalStyles from './Globalstyles';\n\nfunction App() {\n  return (\n    <>\n        <Router />\n        <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}